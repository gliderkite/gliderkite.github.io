<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on gliderkite.io</title>
    <link>/posts/</link>
    <description>Recent content in Posts on gliderkite.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Oct 2020 14:30:34 +0100</lastBuildDate>
    
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Formicarium</title>
      <link>/posts/formicarium/</link>
      <pubDate>Fri, 02 Oct 2020 14:30:34 +0100</pubDate>
      
      <guid>/posts/formicarium/</guid>
      <description>This article is about swarm intelligence, and how we can try to simulate it to show how collective behavior can unlock better solutions to problems that may otherwise remain unsolved.
From Wikipedia, we can define Swarm Intelligence (SI) as:
 SI systems consist typically of a population of simple agents or boids interacting locally with one another and with their environment &amp;hellip; The agents follow very simple rules, and although there is no centralized control structure dictating how individual agents should behave, local, and to a certain degree random, interactions between such agents lead to the emergence of &amp;ldquo;intelligent&amp;rdquo; global behavior, unknown to the individual agents.</description>
      
    </item>
    
    <item>
      <title>Semeion</title>
      <link>/posts/semeion/</link>
      <pubDate>Sat, 26 Sep 2020 13:42:04 +0100</pubDate>
      
      <guid>/posts/semeion/</guid>
      <description>Overview This is an overview of a project I enjoyed working on over the past few months, which is now in a state that I consider good enough to be used for a toy kind of project.
semeion is a small Rust library that allows you to write simulations that run in a 2D (torus) environment, well suited for cellular automata simulations or zero-player games.
The purpose of this library is to try to generalize many of the common concepts and components that you may find yourself writing when working on these type of projects, allowing you to focus especially on the logic of your program.</description>
      
    </item>
    
  </channel>
</rss>
